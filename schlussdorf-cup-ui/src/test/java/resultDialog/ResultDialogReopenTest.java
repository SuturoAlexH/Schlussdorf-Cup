package resultDialog;

import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.image.ImageView;
import javafx.scene.input.KeyCode;
import org.junit.Before;
import org.junit.Test;
import org.openjfx.App;
import org.testfx.framework.junit.ApplicationTest;
import util.TestUtil;

import java.io.File;

import static org.hamcrest.Matchers.isEmptyOrNullString;
import static org.testfx.assertions.api.Assertions.assertThat;

public class ResultDialogReopenTest extends ApplicationTest {

    private Button addButton;

    private TextField fireDepartmentTextField;

    private TextField mistakePointsTextField;

    private TextField timeTextField;

    private Label fireDepartmentErrorText;

    private Label timeErrorText;

    private Label mistakePointsErrorText;

    private ImageView imageView;

    private Label imageErrorText;

    private Button imageButton;

    private Button applyButton;

    private Button cancelButton;

    @Before
    public void setUp() throws Exception {
        TestUtil.deleteSaveFile();
        //TestUtil.deleteImageFolder();

        launch(App.class);

        addButton = lookup("#addButton").query();
        clickOn(addButton);

        fireDepartmentTextField = lookup("#fireDepartmentTextField").query();
        mistakePointsTextField = lookup("#mistakePointsTextField").query();
        timeTextField = lookup("#timeTextField").query();

        fireDepartmentErrorText = lookup("#fireDepartmentErrorLabel").query();
        timeErrorText = lookup("#timeErrorLabel").query();
        mistakePointsErrorText = lookup("#mistakePointsErrorLabel").query();
        imageErrorText = lookup("#imageErrorLabel").query();

        imageView = lookup("#image").query();

        imageButton = lookup("#customImageButton").query();

        applyButton = lookup("#applyButton").query();
        cancelButton = lookup("#cancelButton").query();
    }

    @Test
    public void reopen_fireDepartment_textFieldIsEmpty() {
        //arrange

        //act
        clickOn(fireDepartmentTextField).write("Feuerwehr")
                .clickOn(cancelButton)
                .clickOn(addButton);

        //arrange
        assertThat(fireDepartmentTextField).hasText(isEmptyOrNullString());
    }

    @Test
    public void reopen_fireDepartment_errorTextIsInvisible() {
        //arrange

        //act
        clickOn(applyButton)
                .clickOn(cancelButton)
                .clickOn(addButton);

        //arrange
        assertThat(fireDepartmentErrorText).isInvisible();
    }

    @Test
    public void reopen_time_textFieldIsEmpty() {
        //arrange

        //act
        clickOn(timeTextField).write("letters")
                .clickOn(cancelButton)
                .clickOn(addButton);

        //arrange
        assertThat(fireDepartmentTextField).hasText(isEmptyOrNullString());
    }

    @Test
    public void reopen_time_errorTextIsInvisible() {
        //arrange

        //act
        clickOn(applyButton)
                .clickOn(cancelButton)
                .clickOn(addButton);

        //arrange
        assertThat(timeErrorText).isInvisible();
    }

    @Test
    public void reopen_mistakePoints_textFieldIsEmpty() {
        //arrange

        //act
        clickOn(mistakePointsTextField).write("letters")
                .clickOn(cancelButton)
                .clickOn(addButton);

        //arrange
        assertThat(mistakePointsTextField).hasText(isEmptyOrNullString());
    }

    @Test
    public void reopen_mistakePoints_errorTextIsInvisible() {
        //arrange

        //act
        clickOn(mistakePointsTextField).write("letters")
                .clickOn(applyButton)
                .clickOn(cancelButton)
                .clickOn(addButton);

        //arrange
        assertThat(mistakePointsErrorText).isInvisible();
    }

    @Test
    public void reopen_image_imageViewIsEmpty() {
        //arrange
        File testImage = new File(ResultDialogReopenTest.class.getResource("/images/test_image_2.jpg").getFile());
        TestUtil.setClipBoardContent(testImage.getAbsolutePath());

        //act
        clickOn(imageButton).press(KeyCode.CONTROL, KeyCode.V).release(KeyCode.V, KeyCode.CONTROL).push(KeyCode.ENTER)
                .clickOn(cancelButton)
                .clickOn(addButton);

        //arrange
        assertThat(imageView.getImage()).isNull();
    }

    @Test
    public void reopen_image_errorTextIsInvisible() {
        //arrange

        //act
        clickOn(applyButton)
                .clickOn(cancelButton)
                .clickOn(addButton);

        //arrange
        assertThat(imageErrorText).isInvisible();
    }
}
